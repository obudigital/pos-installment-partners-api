openapi: 3.1.0
info:
  title: Partner API for POS Installments
  version: '1.0'
  summary: Partner API for POS Installments
  description: Partner API for POS Installments
  contact:
    name: Maksym Volchenko
    email: maksym.volchenko@otpbank.ua
servers:
  - url: 'http://test.obudev.in'
    description: Test
  - url: 'http://api.otpbank.com.ua:8080'
    description: Prod
paths:
  /partner/installments/orders:
    post:
      summary: Create POS Installment Order
      operationId: post-partner-installments-orders
      security:
        - Authorization: []
      parameters:
        - $ref: '#/components/parameters/X-Signature'
        - $ref: '#/components/parameters/X-Merchant-Id'
        - $ref: '#/components/parameters/X-Request-Id'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
                    description: ID заказа в Банке
                required:
                  - orderId
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                phoneNumber:
                  $ref: '#/components/schemas/TelephoneNumber'
                storeOrder:
                  $ref: '#/components/schemas/StoreOrder'
                totalAmount:
                  $ref: '#/components/schemas/Amount'
                vatAmount:
                  $ref: '#/components/schemas/Amount'
                periodsChosen:
                  type: integer
                  maximum: 24
                  exclusiveMinimum: 1
                  example: 6
                onSuccessCallbackURI:
                  type: string
                  format: uri-reference
                  description: 'URI в разрешенном базовом домене, привязнному к аккаунту партнера. Может отличаться между средами production и testing'
                  example: /path/to/success
                onFailCallbackURI:
                  type: string
                  format: uri-reference
                  example: /path/to/failed
              required:
                - phoneNumber
                - storeOrder
                - totalAmount
                - periodsChosen
        description: ''
      description: Подача заявки на оформление покупки частями
    get:
      summary: GET All POS-Installment Orders
      operationId: get-partner-installments-orders
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      $ref: '#/components/schemas/PosInstallmentOrder'
      description: Получение списка всех POS-installments
      parameters:
        - $ref: '#/components/parameters/X-Signature'
        - $ref: '#/components/parameters/X-Merchant-Id'
        - $ref: '#/components/parameters/X-Request-Id'
      security:
        - Authorization: []
  '/partner/installments/orders/{orderId}/state':
    parameters:
      - name: orderId
        in: path
        required: true
        schema:
          type: string
          example: FD-127582123
        description: store order id
    get:
      summary: Check Order State
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  state:
                    $ref: '#/components/schemas/InstallmentOrderState'
                  totalAmount:
                    $ref: '#/components/schemas/Amount'
                  storeOrderId:
                    type: string
                required:
                  - state
                  - totalAmount
                  - storeOrderId
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
      operationId: get-partner-installments-orders-orderid-state
      security:
        - Authorization: []
      parameters:
        - $ref: '#/components/parameters/X-Signature'
        - $ref: '#/components/parameters/X-Merchant-Id'
        - $ref: '#/components/parameters/X-Request-Id'
      description: Получение состояния ранее созданной заявки на оформление покупки частями (pull модель вместо callback push модели)
  '/partner/installments/orders/{orderId}/state/sent':
    parameters:
      - $ref: '#/components/parameters/orderId'
    post:
      summary: Notify that Order is sent
      operationId: post-partner-installments-orders-orderid-state-sent
      security:
        - Authorization: []
      parameters:
        - $ref: '#/components/parameters/X-Signature'
        - $ref: '#/components/parameters/X-Merchant-Id'
        - $ref: '#/components/parameters/X-Request-Id'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
      description: |-
        Получение статуса отправлен, инцирует процесс клиринга между партнером и Банком

        Банк активирует рассрочку для Клиента
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sentAt:
                  type: string
                  format: date-time
              required:
                - sentAt
  '/partner/installments/orders/{orderId}/state/cancelled':
    parameters:
      - name: orderId
        in: path
        required: true
        schema:
          type: string
          example: FD-127582123
        description: store order id
    post:
      summary: Cancel Order
      operationId: post-partner-installments-orders-orderid-state-cancelled
      security:
        - Authorization: []
      parameters:
        - $ref: '#/components/parameters/X-Request-Id'
        - $ref: '#/components/parameters/X-Merchant-Id'
        - $ref: '#/components/parameters/X-Signature'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
      description: Заказ может быть отменен только в статусе WAITING_DELIVERY
  '/partner/installments/orders/{orderId}/state/returned':
    parameters:
      - $ref: '#/components/parameters/orderId'
    post:
      summary: Return goods
      operationId: post-partner-installments-orders-orderid-state-returned
      security:
        - Authorization: []
      parameters:
        - $ref: '#/components/parameters/X-Signature'
        - $ref: '#/components/parameters/X-Merchant-Id'
        - $ref: '#/components/parameters/X-Request-Id'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                storeReturnId:
                  type: string
                  description: Идентификатор возврата на стороне магазина
                returnedAt:
                  type: string
                  format: date-time
                returnAmount:
                  $ref: '#/components/schemas/Amount'
                vatAmount:
                  $ref: '#/components/schemas/Amount'
              required:
                - storeReturnId
                - returnedAt
                - returnAmount
      description: Возврат товара возможен только в течение 14 дней с даты отправки заказа (sentAt)
  '/partner/installments/orders/{orderId}/guaranteeLetter':
    parameters:
      - $ref: '#/components/parameters/orderId'
    get:
      summary: GET Guarantee Letter
      description: GET Guarantee Letter
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  header:
                    type: object
                    properties:
                      requestId:
                        type: string
                        description: '???'
                      answerDatetime:
                        type: string
                        format: date-time
                        description: '???'
                      fromOrganization:
                        type: string
                      organizationId:
                        type: string
                        description: digits. налоговый id или по нашей системе?
                  expansion:
                    type: object
                    properties:
                      customer:
                        type: object
                        properties:
                          lastName:
                            type: string
                          firstName:
                            type: string
                          middleName:
                            type: string
                          docType:
                            type: string
                            description: '????'
                          docSeries:
                            type: string
                            minLength: 2
                            maxLength: 2
                          docNumber:
                            type: string
                            pattern: '^[0-9]{6}$'
                            minLength: 6
                            maxLength: 6
                          docIssued:
                            type: string
                            description: кем выдан
                          docDateOfIssue:
                            type: string
                            format: date
                          INN:
                            type: string
                            pattern: '^[0-9]{10}$'
                            minLength: 10
                            maxLength: 10
                      invoice:
                        type: object
                        properties:
                          invoiceId:
                            type: string
                          invoiceDate:
                            type: string
                            format: date
                          invoiceAmount:
                            $ref: '#/components/schemas/Amount'
                      paymentDestination:
                        type: object
                        properties:
                          destId:
                            type: string
                            description: digits ??
                          destName:
                            type: string
                            description: кому платить (юр лицо партнера)
                          destMFO:
                            type: string
                            minLength: 6
                            maxLength: 6
                            pattern: '^[0-9]{6}$'
                          destBankName:
                            type: string
                          destAccNumber:
                            type: string
                            pattern: '^[0-9]*$'
                      bank:
                        type: object
                        properties:
                          agreement:
                            type: string
                            description: код договора
                          agreementDate:
                            type: string
                            description: дата заключения договора
                          creditAmount:
                            $ref: '#/components/schemas/Amount'
                          productTypes:
                            type: string
                            description: '"БР" ????'
                          availablePartsCount:
                            type: integer
                            minimum: 1
                          bankId:
                            type: string
                            pattern: '^[0-9]*$'
                            description: '???? например 21133352'
                          bankName:
                            type: string
                          bankExecutive:
                            type: string
                      sign:
                        type: string
                        pattern: '0[xX][0-9a-fA-F]+'
                        description: hex
                      stamp:
                        type: string
                        pattern: '0[xX][0-9a-fA-F]+'
                        description: hex
            application/xml:
              schema:
                type: object
                properties: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
      operationId: get-partner-installments-orders-orderid-guaranteeLetter
      security:
        - Authorization: []
      parameters:
        - $ref: '#/components/parameters/X-Signature'
        - $ref: '#/components/parameters/X-Request-Id'
        - $ref: '#/components/parameters/X-Merchant-Id'
components:
  schemas:
    Error:
      description: Universal Error
      type: object
      properties:
        code:
          type: integer
          exclusiveMinimum: 0
        type:
          type: string
        message:
          type: string
        causes:
          type: array
          items:
            type: string
      required:
        - code
        - type
    PosInstallmentOrder:
      title: PosInstallmentOrder
      type: object
      properties:
        installmentId:
          type: integer
          exclusiveMinimum: 0
        status:
          $ref: '#/components/schemas/InstallmentOrderState'
        totalAmount:
          $ref: '#/components/schemas/Amount'
        totalPeriods:
          type: integer
          exclusiveMinimum: 1
          maximum: 24
        totalParts:
          type: integer
          exclusiveMinimum: 1
          maximum: 24
      required:
        - installmentId
        - status
        - totalPeriods
    Product:
      title: Product
      type: object
      description: Purchased product (item of an installment order)
      properties:
        name:
          type: string
        totalAmount:
          $ref: '#/components/schemas/Amount'
        count:
          type: integer
          maximum: 10
          minimum: 1
          format: int32
          example: 1
        category:
          type: string
          example: Телевізори
      required:
        - name
        - totalAmount
        - count
        - category
    StoreOrder:
      title: StoreOrder
      type: object
      properties:
        storeId:
          type: string
          description: Идентификатор торговой точки внутри сети партнера
        orderId:
          type: string
          description: Уникальный идентификатор транзакции на стороне магазина. Нужен для отсечения дублиикатов
        invoiceNumber:
          type: string
          description: Номер чека/счета фактуры
        createdAt:
          type: string
          format: date-time
          description: Дата создания счета-фактуры
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        source:
          type: string
          enum:
            - STORE
            - INTERNET
      required:
        - storeId
        - orderId
        - invoiceNumber
        - createdAt
        - products
        - source
    TelephoneNumber:
      type: string
      title: PhoneNumber
      pattern: '^380\d{9}$'
      minLength: 12
      maxLength: 12
      example: '380669998877'
    InstallmentOrderState:
      type: string
      title: InstallmentOrderState
      enum:
        - ACTIVE
        - CLOSED
        - CLIENT_CANCELLED
        - BANK_REJECTED
        - WAITING_CLIENT_APPROVAL
        - STORE_CANCELLED
        - WAITING_DELIVERY
    Amount:
      type: object
      properties:
        value:
          type: number
          format: double
          minimum: 0
          maximum: 10000
        currency:
          type: string
          enum:
            - UAH
            - USD
            - EUR
          example: UAH
          minLength: 3
          maxLength: 3
      required:
        - value
        - currency
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
      description: ''
  parameters:
    X-Merchant-Id:
      name: X-Merchant-Id
      in: header
      required: true
      schema:
        type: integer
        example: 7654
        format: int32
      description: 'ID мерчанта - юридического лица, с которым заключен договор'
    X-Signature:
      name: X-Signature
      in: header
      required: true
      schema:
        type: string
        format: binary
        example: dGVzdCBzdHJpbmcgdG8gZGVtb25zdHJhdGUgYmFzZTY0
      description: See docs
    X-Request-Id:
      name: X-Request-Id
      in: header
      required: true
      schema:
        type: string
        format: uuid
        example: 7529ffdf-363f-7ad7-56c8-04f1d09ddece
      description: Random UUID
    orderId:
      name: orderId
      in: path
      schema:
        type: string
        example: '7582123'
      description: order id returned at Createdorder
      style: label
      required: true
security:
  - Authorization: []
